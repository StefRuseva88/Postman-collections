{
	"info": {
		"_postman_id": "22bb0807-fc0c-4295-9e82-8b4e1e20c4b0",
		"name": "FoodyApiFinalCollection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28709443"
	},
	"item": [
		{
			"name": "Login and Authentication",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response body contains username, password, and accessToken\", function () {\r",
							"    pm.expect(pm.response.json()).to.include.keys(\"username\", \"password\", \"accessToken\");\r",
							"});\r",
							"\r",
							"pm.collectionVariables.set(\"token\", pm.response.json().accessToken);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"userName\": \"IvanShishman\", \r\n\"password\": \"123456\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/User/Authentication",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"User",
						"Authentication"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a New Food",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const randomFoodTitle = generateRandomFoodTitle();\r",
							"pm.collectionVariables.set(\"randomFood\", randomFoodTitle);\r",
							"\r",
							"function generateRandomFoodTitle() {\r",
							"    const randomWord = getRandomWord();\r",
							"    const randomNumber = getRandomNumber();\r",
							"    return `${randomWord}${randomNumber}`;\r",
							"}\r",
							"\r",
							"function getRandomWord() {\r",
							"    const words = [\"apple\", \"banana\", \"orange\", \"grape\", \"strawberry\"];\r",
							"    return words[Math.floor(Math.random() * words.length)];\r",
							"}\r",
							"\r",
							"function getRandomNumber() {\r",
							"    return Math.floor(Math.random() * 1000); // Generate a random number up to 999\r",
							"}\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Response body contains foodId property\", function () {\r",
							"    pm.expect(pm.response.json()).to.have.property(\"foodId\");\r",
							"});\r",
							"\r",
							"pm.collectionVariables.set(\"foodId\", pm.response.json().foodId);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"{{randomFood}}\",\r\n    \"description\": \"Good Luck on the Exam! description of {{randomFood}}\",\r\n    \"url\": \"http://...jpg\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/Food/Create",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"Food",
						"Create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Search Food by Name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response data is an array with more than 0 items\", function(){",
							"    const responseData = pm.response.json();",
							"    pm.expect(responseData).to.be.an(\"array\");",
							"    pm.expect(responseData.length).to.be.greaterThan(0);",
							"});",
							"",
							"pm.test(\"Response should contain the food we searched for\", () => {",
							"    const responseData = pm.response.json()",
							"    const randomFood = pm.collectionVariables.get(\"randomFood\")",
							"    pm.expect(responseData[0].name).to.eql(randomFood)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/Food/All?foodName={{randomFood}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"Food",
						"All"
					],
					"query": [
						{
							"key": "foodName",
							"value": "{{randomFood}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Edit the Name of the Created Food ",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains 'Successfully edited' message\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Successfully edited\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n {\r\n  \"path\": \"/name\",\r\n  \"op\": \"replace\",\r\n  \"value\": \"New Name\"\r\n }\r\n]\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/Food/Edit/:foodId",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"Food",
						"Edit",
						":foodId"
					],
					"variable": [
						{
							"key": "foodId",
							"value": "{{foodId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete the Edited Food",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response message is 'Deleted successfully!'\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Deleted successfully!\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/Food/Delete/:foodid",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"Food",
						"Delete",
						":foodid"
					],
					"variable": [
						{
							"key": "foodid",
							"value": "{{foodId}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseURL",
			"value": "http://softuni-qa-loadbalancer-2137572849.eu-north-1.elb.amazonaws.com:86",
			"type": "string"
		},
		{
			"key": "token",
			"value": ""
		},
		{
			"key": "randomFood",
			"value": ""
		},
		{
			"key": "foodId",
			"value": ""
		}
	]
}